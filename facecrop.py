# -*- coding: utf-8 -*-
"""facecrop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ke54RRnKTEtcTjO_5AXQQiMhSw_kySaT
"""

from google.colab import drive
drive.mount('/gdrive')

from imutils import face_utils
from google.colab.patches import cv2_imshow
import numpy as np
import imutils
import dlib
import cv2


detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor('/gdrive/MyDrive/shape_predictor_68_face_landmarks.dat')

image = cv2.imread('/gdrive/MyDrive/face1.JPG')
image = imutils.resize(image, width=1000)
tmp_image = image[:]

gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
rects = detector(gray,1)

for (i, rect) in enumerate(rects):
  
  # determine the facial landmarks for the face region, then 
  # convert the facial landmark (x, y)-coordinates to a NumPy 
  # array 
  shape = predictor(gray, rect) 
  shape = face_utils.shape_to_np(shape)

  
  # convert dlib's rectangle to a OpenCV-style bounding box 
  # [i.e., (x, y, w, h)], then draw the face bounding box 
  (x, y, w, h) = face_utils.rect_to_bb(rect)
  cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)
  face_image = tmp_image[x:x+w , y:y+h]
  

    
# show the output image with the face detections + facial landmarks
cv2_imshow(image)
cv2_imshow(face_image)
cv2.waitKey(0)
